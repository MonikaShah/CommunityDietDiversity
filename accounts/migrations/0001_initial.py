# Generated by Django 3.2 on 2021-07-21 13:14

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('education', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='FamilyType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('family', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='FirstModule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('email', models.CharField(max_length=255)),
                ('tennis', models.CharField(max_length=255)),
                ('cricket', models.CharField(max_length=255)),
                ('chess', models.CharField(max_length=255)),
                ('food', models.CharField(max_length=255)),
                ('drinks', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Form',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Occupation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('occupation', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='ParentsInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.BinaryField(max_length=500, validators=[django.core.validators.EmailValidator()])),
                ('consent', models.BooleanField(default=True)),
                ('name', models.BinaryField(max_length=500)),
                ('gender', models.CharField(max_length=255)),
                ('age', models.IntegerField(validators=[django.core.validators.MinValueValidator(3)])),
                ('address', models.CharField(max_length=255)),
                ('pincode', models.IntegerField()),
                ('no_of_family_members', models.IntegerField(validators=[django.core.validators.MinValueValidator(2)])),
                ('children_count', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('first_password', models.CharField(default='helloworld14', max_length=20)),
                ('password_changed', models.BooleanField(default=False)),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.city')),
                ('edu', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.education')),
                ('occupation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.occupation')),
            ],
        ),
        migrations.CreateModel(
            name='ReligiousBelief',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('religion', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('address', models.CharField(max_length=255)),
                ('pincode', models.IntegerField()),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.city')),
            ],
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='TeacherInCharge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.school')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='StudentsInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('address', models.CharField(max_length=255)),
                ('rollno', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('gender', models.CharField(max_length=255)),
                ('dob', models.DateField(error_messages={'invalid': 'Date of Birth is out of range'}, validators=[django.core.validators.MaxValueValidator(limit_value=datetime.date(2016, 7, 22)), django.core.validators.MinValueValidator(limit_value=datetime.date(2006, 7, 25))])),
                ('first_password', models.CharField(default='helloworld14', max_length=20)),
                ('password_changed', models.BooleanField(default=False)),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.parentsinfo')),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.school')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.teacherincharge')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='school',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.state'),
        ),
        migrations.AddField(
            model_name='parentsinfo',
            name='religion',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.religiousbelief'),
        ),
        migrations.AddField(
            model_name='parentsinfo',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.state'),
        ),
        migrations.AddField(
            model_name='parentsinfo',
            name='type_of_family',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.familytype'),
        ),
        migrations.AddField(
            model_name='parentsinfo',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='ModuleOne',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pre', models.BooleanField()),
                ('draft', models.BooleanField()),
                ('nutriGarden', models.CharField(max_length=10, null=True)),
                ('source_fruits_vegetables', models.CharField(max_length=255, null=True)),
                ('grow_own_food', models.CharField(max_length=255, null=True)),
                ('if_grow_what', models.CharField(default='NA', max_length=255, null=True)),
                ('reason_gardening', models.CharField(max_length=255, null=True)),
                ('healthy_diet', models.CharField(max_length=255, null=True)),
                ('imp_nutrients', models.CharField(max_length=255, null=True)),
                ('citrus_fruits_blank', models.CharField(max_length=255, null=True)),
                ('not_richsource_iron', models.CharField(max_length=255, null=True)),
                ('source_vitaminA', models.CharField(max_length=255, null=True)),
                ('imp_eat_fruits_vegetables', models.CharField(max_length=255, null=True)),
                ('reason_wide_variety_food', models.CharField(max_length=255, null=True)),
                ('microgreen', models.CharField(max_length=255, null=True)),
                ('microgreen_example', models.CharField(max_length=255, null=True)),
                ('harvestdays_microgreen', models.CharField(max_length=255, null=True)),
                ('microgreen_grow_seeds_kitchen', models.CharField(max_length=255, null=True)),
                ('microgreen_nutritiousthan_fullgrownvegetables', models.CharField(max_length=255, null=True)),
                ('microgreen_immunity', models.CharField(max_length=255, null=True)),
                ('microgreen_variety', models.CharField(max_length=255, null=True)),
                ('microgreen_source', models.CharField(max_length=255, null=True)),
                ('newspaper_grow_microgreen', models.CharField(max_length=255, null=True)),
                ('microgreen_first_step', models.CharField(max_length=255, null=True)),
                ('soaking_time_seeds', models.CharField(max_length=255, null=True)),
                ('microgreen_watering', models.CharField(max_length=255, null=True)),
                ('microgreen_use', models.CharField(max_length=255, null=True)),
                ('submission_timestamp', models.DateTimeField(null=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.studentsinfo')),
            ],
        ),
        migrations.CreateModel(
            name='FormDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('open', models.BooleanField()),
                ('pre', models.BooleanField()),
                ('start_timestamp', models.DateTimeField()),
                ('end_timestamp', models.DateTimeField(null=True)),
                ('form', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.form')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.teacherincharge')),
            ],
        ),
        migrations.AddField(
            model_name='city',
            name='state',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='accounts.state'),
        ),
    ]
